apiVersion: apps/v1
kind: Deployment
metadata:
  name: hospital-api-prod
  namespace: default
  labels:
    app: hospital-api
    environment: prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hospital-api
      environment: prod
  template:
    metadata:
      labels:
        app: hospital-api
        environment: prod
    spec:
      containers:
      - name: hospital-api
        image: ${DOCKER_HUB_USERNAME}/hospital-api:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: prod
        - name: JDBC_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: hospital-api-prod-secrets
              key: jdbc-url
        - name: JDBC_DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: hospital-api-prod-secrets
              key: db-username
        - name: JDBC_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hospital-api-prod-secrets
              key: db-password
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: hospital-api-prod-secrets
              key: admin-username
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hospital-api-prod-secrets
              key: admin-password
        resources:
          limits:
            cpu: "2000m"
            memory: "2Gi"
          requests:
            cpu: "1000m"
            memory: "1Gi"
        readinessProbe:
          httpGet:
            path: /api/management/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/management/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: hospital-api-prod
  namespace: default
  labels:
    app: hospital-api
    environment: prod
spec:
  selector:
    app: hospital-api
    environment: prod
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hospital-api-prod
  namespace: default
  labels:
    app: hospital-api
    environment: prod
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
spec:
  tls:
  - hosts:
    - api.hospital.example.com
    secretName: hospital-api-prod-tls
  rules:
  - host: api.hospital.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hospital-api-prod
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hospital-api-prod
  namespace: default
  labels:
    app: hospital-api
    environment: prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hospital-api-prod
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: hospital-api-prod-secrets
  namespace: default
  labels:
    app: hospital-api
    environment: prod
type: Opaque
data:
  jdbc-url: amRiYzpwb3N0Z3Jlc3FsOi8vaG9zcGl0YWwtZGIucHJvZC5zdmMuY2x1c3Rlci5sb2NhbDo1NDMyL2hvc3BpdGFsZGI= # jdbc:postgresql://hospital-db.prod.svc.cluster.local:5432/hospitaldb
  db-username: aG9zcGl0YWxfYXBw # hospital_app
  db-password: c2VjdXJlLXByb2QtcGFzc3dvcmQ= # secure-prod-password
  admin-username: YWRtaW4= # admin
  admin-password: c2VjdXJlLXByb2QtYWRtaW4tcGFzc3dvcmQ= # secure-prod-admin-password