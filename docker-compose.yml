version: '3.8'

services:
  # PostgreSQL Databases
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: hospital_feature_db
      #POSTGRES_MULTIPLE_DATABASES: hospital_security,hospital_patient,hospital_medicalstaff,hospital_appointment,hospital_clinicalrecord,hospital_scheduling,hospital_notification
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
#      - ./docker/postgres/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - hospital-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - hospital-network

  # Security Service
#  hospital-api-security:
#    build:
#      context: ./hospital-api-security
#      dockerfile: Dockerfile
#    container_name: hospital-api-security
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=dev
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hospital_security
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=postgres
#      - SPRING_RABBITMQ_HOST=rabbitmq
#      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
#    networks:
#      - hospital-network
#    depends_on:
#      - postgres
#      - rabbitmq
#      - elasticsearch
#
#  # Patient Service
#  hospital-api-patient:
#    build:
#      context: ./hospital-api-patient
#      dockerfile: Dockerfile
#    container_name: hospital-api-patient
#    ports:
#      - "8081:8081"
#    environment:
#      - SPRING_PROFILES_ACTIVE=dev
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hospital_patient
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=postgres
#      - SPRING_RABBITMQ_HOST=rabbitmq
#      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
#    networks:
#      - hospital-network
#    depends_on:
#      - postgres
#      - rabbitmq
#      - elasticsearch

networks:
  hospital-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  rabbitmq-data:
    driver: local
  elasticsearch-data:
    driver: local
