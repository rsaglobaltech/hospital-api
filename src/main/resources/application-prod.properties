# Production Environment Configuration

# Application
spring.application.name=hospital-api
server.port=8080

# Database Configuration
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/hospital_prod}
spring.datasource.driverClassName=${JDBC_DATABASE_DRIVER:org.postgresql.Driver}
spring.datasource.username=${JDBC_DATABASE_USERNAME:postgres}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:postgres}
spring.jpa.database-platform=${JDBC_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Flyway Configuration for Production
spring.flyway.enabled=true
spring.flyway.clean-disabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# Logging
logging.level.root=WARN
logging.level.com.example.hospitalapi=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN

# Swagger Configuration - Disabled in production for security
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# Thread Pool Configuration
hospital.thread-pool.command.core-size=16
hospital.thread-pool.command.max-size=32
hospital.thread-pool.command.queue-capacity=200
hospital.thread-pool.query.core-size=16
hospital.thread-pool.query.max-size=32
hospital.thread-pool.query.queue-capacity=200

# Security (in a real scenario, this would be much more robust)
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:prod-admin-password}

# Server Configuration
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=20
server.tomcat.max-connections=10000
server.tomcat.accept-count=500

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterAccess=600s

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized
